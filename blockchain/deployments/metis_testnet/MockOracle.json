{
  "address": "0xfA3422b99515d78D889C0a8Ce866A8444A589fB8",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "int256",
          "name": "_price",
          "type": "int256"
        },
        {
          "internalType": "uint8",
          "name": "_decimals",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "int256",
          "name": "current",
          "type": "int256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "roundId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "updatedAt",
          "type": "uint256"
        }
      ],
      "name": "AnswerUpdated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint80",
          "name": "",
          "type": "uint80"
        }
      ],
      "name": "answers",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "description",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint80",
          "name": "_roundId",
          "type": "uint80"
        }
      ],
      "name": "getRoundData",
      "outputs": [
        {
          "internalType": "uint80",
          "name": "",
          "type": "uint80"
        },
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint80",
          "name": "",
          "type": "uint80"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "latestRoundData",
      "outputs": [
        {
          "internalType": "uint80",
          "name": "",
          "type": "uint80"
        },
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint80",
          "name": "",
          "type": "uint80"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "price",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "roundId",
      "outputs": [
        {
          "internalType": "uint80",
          "name": "",
          "type": "uint80"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int256",
          "name": "_price",
          "type": "int256"
        }
      ],
      "name": "setPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x9ef6c9f9daf2acdcaac796a8281bbd46dac600a92c0e26a8e4c6efc6e37a48c5",
  "receipt": {
    "to": null,
    "from": "0x6860542E55Fb9292e4c8b478FcEec724d3351C2e",
    "contractAddress": "0xfA3422b99515d78D889C0a8Ce866A8444A589fB8",
    "transactionIndex": 0,
    "gasUsed": "431812",
    "logsBloom": "0x
    "blockHash": "0x435179c00c6a3d303e9468a87b5158af26263309e093ce4d38257b9c05ae19a8",
    "transactionHash": "0x9ef6c9f9daf2acdcaac796a8281bbd46dac600a92c0e26a8e4c6efc6e37a48c5",
    "logs": [],
    "blockNumber": 695398,
    "cumulativeGasUsed": "431812",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "16300000000000000000",
    18,
    "Mock Oracle"
  ],
  "numDeployments": 1,
  "solcInputHash": "ef33d412d5126da11378f928426c3b9e",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"_price\",\"type\":\"int256\"},{\"internalType\":\"uint8\",\"name\":\"_decimals\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"int256\",\"name\":\"current\",\"type\":\"int256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"}],\"name\":\"AnswerUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"\",\"type\":\"uint80\"}],\"name\":\"answers\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"roundId\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"_price\",\"type\":\"int256\"}],\"name\":\"setPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MockOracle.sol\":\"MockOracle\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/MockOracle.sol\":{\"content\":\"pragma solidity ^0.8.0;\\n\\n// Import aggregatorv3\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\ncontract MockOracle is AggregatorV3Interface {\\n    int256 public price;\\n    uint8 public decimals;\\n    string public description;\\n    uint256 public version = 1;\\n    uint80 public roundId = 1;\\n    mapping(uint80 => int256) public answers;\\n    event AnswerUpdated(int256 indexed current, uint256 indexed roundId, uint256 updatedAt);\\n\\n    constructor(int256 _price, uint8 _decimals, string memory _description) {\\n        price = _price;\\n        answers[roundId] = price;\\n        decimals = _decimals;\\n        description = _description;\\n    }\\n\\n    function getRoundData(uint80 _roundId) public view override returns (uint80, int256, uint256, uint256, uint80) {\\n        return (_roundId, answers[_roundId], 0, 0, 0);\\n    }\\n\\n    function latestRoundData() public view override returns (uint80, int256, uint256, uint256, uint80) {\\n        return (roundId, price, 0, 0, 0);\\n    }\\n\\n    function setPrice(int256 _price) public {\\n        price = _price;\\n        answers[roundId] = price;\\n        emit AnswerUpdated(price, roundId, block.timestamp);\\n        roundId++;\\n    }\\n}\\n\",\"keccak256\":\"0xd62781fc61814f57e8ba9120d7945f0a45ce5b3cc4931af75de99b84834378fc\"}},\"version\":1}",
  "bytecode": "0x608060405260016003819055600480546001600160501b031916909117905534801561002a57600080fd5b5060405161071a38038061071a833981016040819052610049916100a2565b60008381556004546001600160501b031681526005602052604090208390556001805460ff191660ff841617905560026100838282610216565b505050506102d5565b634e487b7160e01b600052604160045260246000fd5b6000806000606084860312156100b757600080fd5b8351925060208085015160ff811681146100d057600080fd5b60408601519093506001600160401b03808211156100ed57600080fd5b818701915087601f83011261010157600080fd5b8151818111156101135761011361008c565b604051601f8201601f19908116603f0116810190838211818310171561013b5761013b61008c565b816040528281528a8684870101111561015357600080fd5b600093505b828410156101755784840186015181850187015292850192610158565b60008684830101528096505050505050509250925092565b600181811c908216806101a157607f821691505b6020821081036101c157634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561021157600081815260208120601f850160051c810160208610156101ee5750805b601f850160051c820191505b8181101561020d578281556001016101fa565b5050505b505050565b81516001600160401b0381111561022f5761022f61008c565b6102438161023d845461018d565b846101c7565b602080601f83116001811461027857600084156102605750858301515b600019600386901b1c1916600185901b17855561020d565b600085815260208120601f198616915b828110156102a757888601518255948401946001909101908401610288565b50858210156102c55787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610436806102e46000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80638cd221c9116100665780638cd221c9146101085780639a6fc8f514610133578063a035b1fe14610196578063f7a308061461019f578063feaf968c146101b457600080fd5b8063313ce567146100985780634c295ca3146100bc57806354fd4d50146100ea5780637284e416146100f3575b600080fd5b6001546100a59060ff1681565b60405160ff90911681526020015b60405180910390f35b6100dc6100ca3660046102fb565b60056020526000908152604090205481565b6040519081526020016100b3565b6100dc60035481565b6100fb6101cf565b6040516100b3919061032b565b60045461011b906001600160501b031681565b6040516001600160501b0390911681526020016100b3565b6101626101413660046102fb565b6001600160501b038116600090815260056020526040812054919281908190565b604080516001600160501b03968716815260208101959095528401929092526060830152909116608082015260a0016100b3565b6100dc60005481565b6101b26101ad366004610379565b61025d565b005b600454600080546001600160501b0390921691908080610162565b600280546101dc90610392565b80601f016020809104026020016040519081016040528092919081815260200182805461020890610392565b80156102555780601f1061022a57610100808354040283529160200191610255565b820191906000526020600020905b81548152906001019060200180831161023857829003601f168201915b505050505081565b6000818155600480546001600160501b039081168352600560209081526040938490208590559154925142815292169183917f0559884fd3a460db3073b7fc896cc77986f16e378210ded43186175bf646fc5f910160405180910390a3600480546001600160501b03169060006102d3836103cc565b91906101000a8154816001600160501b0302191690836001600160501b031602179055505050565b60006020828403121561030d57600080fd5b81356001600160501b038116811461032457600080fd5b9392505050565b600060208083528351808285015260005b818110156103585785810183015185820160400152820161033c565b506000604082860101526040601f19601f8301168501019250505092915050565b60006020828403121561038b57600080fd5b5035919050565b600181811c908216806103a657607f821691505b6020821081036103c657634e487b7160e01b600052602260045260246000fd5b50919050565b60006001600160501b038083168181036103f657634e487b7160e01b600052601160045260246000fd5b600101939250505056fea26469706673582212209cefaac3a36c4f8c7a8b990bfac313fe9e61bf221ad4b41a761eeffb854f480464736f6c63430008110033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100935760003560e01c80638cd221c9116100665780638cd221c9146101085780639a6fc8f514610133578063a035b1fe14610196578063f7a308061461019f578063feaf968c146101b457600080fd5b8063313ce567146100985780634c295ca3146100bc57806354fd4d50146100ea5780637284e416146100f3575b600080fd5b6001546100a59060ff1681565b60405160ff90911681526020015b60405180910390f35b6100dc6100ca3660046102fb565b60056020526000908152604090205481565b6040519081526020016100b3565b6100dc60035481565b6100fb6101cf565b6040516100b3919061032b565b60045461011b906001600160501b031681565b6040516001600160501b0390911681526020016100b3565b6101626101413660046102fb565b6001600160501b038116600090815260056020526040812054919281908190565b604080516001600160501b03968716815260208101959095528401929092526060830152909116608082015260a0016100b3565b6100dc60005481565b6101b26101ad366004610379565b61025d565b005b600454600080546001600160501b0390921691908080610162565b600280546101dc90610392565b80601f016020809104026020016040519081016040528092919081815260200182805461020890610392565b80156102555780601f1061022a57610100808354040283529160200191610255565b820191906000526020600020905b81548152906001019060200180831161023857829003601f168201915b505050505081565b6000818155600480546001600160501b039081168352600560209081526040938490208590559154925142815292169183917f0559884fd3a460db3073b7fc896cc77986f16e378210ded43186175bf646fc5f910160405180910390a3600480546001600160501b03169060006102d3836103cc565b91906101000a8154816001600160501b0302191690836001600160501b031602179055505050565b60006020828403121561030d57600080fd5b81356001600160501b038116811461032457600080fd5b9392505050565b600060208083528351808285015260005b818110156103585785810183015185820160400152820161033c565b506000604082860101526040601f19601f8301168501019250505092915050565b60006020828403121561038b57600080fd5b5035919050565b600181811c908216806103a657607f821691505b6020821081036103c657634e487b7160e01b600052602260045260246000fd5b50919050565b60006001600160501b038083168181036103f657634e487b7160e01b600052601160045260246000fd5b600101939250505056fea26469706673582212209cefaac3a36c4f8c7a8b990bfac313fe9e61bf221ad4b41a761eeffb854f480464736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 52,
        "contract": "contracts/MockOracle.sol:MockOracle",
        "label": "price",
        "offset": 0,
        "slot": "0",
        "type": "t_int256"
      },
      {
        "astId": 54,
        "contract": "contracts/MockOracle.sol:MockOracle",
        "label": "decimals",
        "offset": 0,
        "slot": "1",
        "type": "t_uint8"
      },
      {
        "astId": 56,
        "contract": "contracts/MockOracle.sol:MockOracle",
        "label": "description",
        "offset": 0,
        "slot": "2",
        "type": "t_string_storage"
      },
      {
        "astId": 59,
        "contract": "contracts/MockOracle.sol:MockOracle",
        "label": "version",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 62,
        "contract": "contracts/MockOracle.sol:MockOracle",
        "label": "roundId",
        "offset": 0,
        "slot": "4",
        "type": "t_uint80"
      },
      {
        "astId": 66,
        "contract": "contracts/MockOracle.sol:MockOracle",
        "label": "answers",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_uint80,t_int256)"
      }
    ],
    "types": {
      "t_int256": {
        "encoding": "inplace",
        "label": "int256",
        "numberOfBytes": "32"
      },
      "t_mapping(t_uint80,t_int256)": {
        "encoding": "mapping",
        "key": "t_uint80",
        "label": "mapping(uint80 => int256)",
        "numberOfBytes": "32",
        "value": "t_int256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      },
      "t_uint80": {
        "encoding": "inplace",
        "label": "uint80",
        "numberOfBytes": "10"
      }
    }
  }
}